name: 🚀 Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

env:
  SENTRY_HOST: https://walton-vikings.sentry.io
  SENTRY_ORG: walton-vikings
  SENTRY_PROJECT: nodejs-api-backend
  SENTRY_URL: https://sentry.io

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.sentry-release.outputs.version }}
      release-name: ${{ steps.sentry-release.outputs.release-name }}
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: |
          npm test
          npm run lint

      - name: 🔨 Build (no-op for Node.js)
        run: npm run build

      - name: 📤 Create Sentry release
        id: sentry-release
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_URL: ${{ env.SENTRY_URL }}
        run: |
          set -euo pipefail  # Bash safety flags
          
          # Extract version and create consistent release name (strip 'v' prefix)
          VERSION="${{ github.ref_name }}"
          VERSION=${VERSION#v}  # Remove 'v' prefix if present
          RELEASE="${{ env.SENTRY_PROJECT }}@$VERSION"
          
          # Export clean version and release name to GitHub Actions environment for reuse
          echo "CLEAN_VERSION=$VERSION" >> $GITHUB_ENV
          echo "RELEASE_NAME=$RELEASE" >> $GITHUB_ENV
          
          # Also expose as step outputs for cross-job and expression context usage
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "release-name=$RELEASE" >> $GITHUB_OUTPUT
          
          # Create release
          npx @sentry/cli releases new "$RELEASE"
          
          # Set commits for the release
          npx @sentry/cli releases set-commits "$RELEASE" --auto
          
          # Finalize release
          npx @sentry/cli releases finalize "$RELEASE"

      - name: 🐙 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## 🔄 Backend Release
            
            Release ${{ github.ref_name }}
            
            ## 🔗 Sentry Release
            
            View detailed error tracking and performance monitoring in Sentry:
            ${{ env.SENTRY_HOST }}/organizations/${{ env.SENTRY_ORG }}/releases/${{ steps.sentry-release.outputs.release-name }}/
            
            ## 📊 Issue Resolution
            
            This release may resolve the following Sentry issues:
            - Check the Sentry release page for automatic issue resolution
            - Backend API improvements and error handling enhancements
            - OAuth flow and rate limiting optimizations
          draft: false
          prerelease: false

  deploy-notification:
    needs: release
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: 🚀 Mark deployment in Sentry
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_URL: ${{ env.SENTRY_URL }}
        run: |
          set -euo pipefail  # Bash safety flags
          
          # Use job output for consistent release name access
          npx @sentry/cli releases deploys "${{ needs.release.outputs.release-name }}" new -e production
